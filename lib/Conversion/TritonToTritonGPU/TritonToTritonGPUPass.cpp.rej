@@ -835,11 +835,12 @@
   ConvertTritonToTritonGPU() = default;
   // constructor with some parameters set explicitly.
   ConvertTritonToTritonGPU(const std::string &target, int numWarps,
-                           int threadsPerWarp, int numCTAs) {
+                           int threadsPerWarp, int numCTAs, int protonSlots) {
     this->numWarps = numWarps;
     this->threadsPerWarp = threadsPerWarp;
     this->numCTAs = numCTAs;
     this->target = target;
+    this->protonSlots = protonSlots;
   }
 
   void runOnOperation() override {
@@ -898,9 +904,10 @@
 mlir::triton::createConvertTritonToTritonGPUPass(const std::string &target,
                                                  int numWarps,
                                                  int threadsPerWarp,
-                                                 int numCTAs) {
+                                                 int numCTAs,
+                                                 int protonSlots) {
   return std::make_unique<::ConvertTritonToTritonGPU>(target, numWarps,
-                                                      threadsPerWarp, numCTAs);
+                                                      threadsPerWarp, numCTAs, protonSlots);
 }
 
 std::unique_ptr<OperationPass<ModuleOp>>
